version: 0.2

phases:
  install:
    commands:
      # Install Docker Compose
      - curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      - chmod +x /usr/local/bin/docker-compose
      - echo 'docker compose installed'
  pre_build:
    commands:
      # Login to Amazon ECR
      - rsapub=$(aws ssm get-parameter --name id_rsa.pub --with-decryption --query "Parameter.Value")
      - rsa=$(aws ssm get-parameter --name id_rsa --with-decryption --query "Parameter.Value")
      - mkdir -p ~/.ssh
      - chmod 700 ~/.ssh
      - echo "$rsa"
      - echo "$rsa" > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      - ssh-keygen -F github.com || ssh-keyscan github.com >>~/.ssh/known_hosts
      - git init
      - git config --global init.defaultBranch main
      - git remote add origin git@github.com:MKianmehr/central-academy.git
      - git fetch
      - git submodule init
      - git submodule update --recursive
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 190527186601.dkr.ecr.us-east-1.amazonaws.com
      - echo 'login to ecr'
      - echo 'submodules fetched'

  build:
    commands:
      # Use Docker Compose to build and tag images
      - docker-compose build
      - docker tag cacademy:$CODEBUILD_RESOLVED_SOURCE_VERSION 190527186601.dkr.ecr.us-east-1.amazonaws.com/cacademy:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo 'build and tag'
  post_build:
    commands:
      # Push images to Amazon ECR
      - docker push 190527186601.dkr.ecr.us-east-1.amazonaws.com/cacademy:$CODEBUILD_RESOLVED_SOURCE_VERSION
      # Create image definitions file for use in CodeDeploy
      - echo '[{"name":"cacademy","imageUri":"%s"}]' 190527186601.dkr.ecr.us-east-1.amazonaws.com/cacademy:$CODEBUILD_RESOLVED_SOURCE_VERSION > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
